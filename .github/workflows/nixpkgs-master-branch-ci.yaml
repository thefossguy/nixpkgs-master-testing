name: Build `prathams-nixos` with master branch of NixOS/nixpkgs
on:
  workflow_dispatch:
  schedule:
    - cron: '30 18 * * *' # Everyday, at 00:00 IST

env:
  CACHIX_CACHE_BUCKET_NAME: thefossguy

jobs:
  update-flake-lock:
    name: Update `flake.lock`
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: DeterminateSystems/nix-installer-action@main

      - name: Checkout yesterday's commit for Nixpkgs
        run: |
          YESTERDAYS_NIXPKGS_SHA="$(curl "https://api.github.com/repos/nixos/nixpkgs/commits?until=$(date -d '-1 day' +'%Y-%m-%d')T00:00:00Z&per_page=1" 2>/dev/null | jq --raw-output '.[].sha')"
          sed -i "s@NixOS/nixpkgs/master@NixOS/nixpkgs/${YESTERDAYS_NIXPKGS_SHA}@g" flake.nix
      - run: nix flake update

      - name: Verify commit SHA in flake lockfile
        run: |
          YESTERDAYS_NIXPKGS_SHA="$(curl "https://api.github.com/repos/nixos/nixpkgs/commits?until=$(date -d '-1 day' +'%Y-%m-%d')T00:00:00Z&per_page=1" 2>/dev/null | jq --raw-output '.[].sha')"
          grep "\"rev\": \"${YESTERDAYS_NIXPKGS_SHA}\"," flake.lock

      - name: Checking the inputs
        run: |
          export CURRENT_NIX_SYSTEM="$(nix eval --raw --impure --expr builtins.currentSystem)"
          nix build .#appsOverlay."${CURRENT_NIX_SYSTEM}".assertNixpkgsInputsPointToMaster
          ./result

      - uses: actions/upload-artifact@main
        with:
          name: flake-lock
          path: flake.lock
          retention-days: 1
          overwrite: true
          if-no-files-found: error
          compression-level: 9

  nixpkgs-master-build:
    needs: update-flake-lock
    name: Building ${{ matrix.nixTarget }} in `prathams-nixos` for ${{ matrix.nixSystem }}
    runs-on: ${{ matrix.nixSystem == 'x86_64-linux' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    strategy:
      fail-fast: false
      matrix:
        nixTarget: [ nixosConfigurations, homeConfigurations, devShells, packages, ]
        nixSystem: [ aarch64-linux, x86_64-linux, ]
    steps:
      - uses: actions/checkout@main
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@master
        with:
          name: ${{ env.CACHIX_CACHE_BUCKET_NAME }}
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        env:
          XDG_CONFIG_HOME: ~/.config

      - uses: actions/download-artifact@main
        with:
          name: flake-lock
          path: .

      - name: Running the CI
        timeout-minutes: 60
        run: |
          nix build .#appsOverlay.${{ matrix.nixSystem }}.runPrathamsNixOSCI
          ./result --${{ matrix.nixTarget }}

      - name: Push build results
        run: |
          cachix push --compression-level 19 --compression-method zstd ${{ env.CACHIX_CACHE_BUCKET_NAME }} ./result*

  final-check:
    needs: nixpkgs-master-build
    name: Final check
    runs-on: ubuntu-latest
    steps:
      - run: echo 'All jobs succeeded.'
